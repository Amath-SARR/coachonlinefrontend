/**
 *
 * {{ properCase name }}
 *
 */

{{#if memo}}
import React, { memo } from 'react';
{{else}}
import React from 'react';
{{/if}}
import {{properCase name}}Props from './{{kebabCase name}}.props';
import styled from 'styled-components';
import { DispatchType } from '../../types';
{{#if withConnect}}
import { createStructuredSelector } from 'reselect';
import { connect } from 'react-redux';
import { compose } from '@reduxjs/toolkit';
//import makeSelectAuth from '../../containers/Auth/selectors';
{{/if}}

{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
import messages from './messages';
{{/if}}

const Wrapper = styled.div``;

function {{ properCase name }}(props: {{properCase name}}Props) {
  return (
    <Wrapper>
    </Wrapper>
  );
}

{{#if withConnect}}
  function mapDispatchToProps(dispatch: DispatchType) {
  return {
  dispatch,
  };
  }
{{/if}}

{{#if withConnect}}
  const mapStateToProps = createStructuredSelector({
  // auth: makeSelectAuth()
  });
{{/if}}

{{#if withConnect}}
  const withConnect = connect(
  mapStateToProps,
  mapDispatchToProps,
  );
{{/if}}

{{#if withConnect}}
export default compose(
  withConnect,
{{#if memo}}
  memo,
{{/if}}
)({{ properCase name }});
{{else if memo}}
  export default memo({{ properCase name }});
{{else}}
  export default {{ properCase name }};
{{/if}}
